/*
 * This file is generated by jOOQ.
 */
package ai.ragu.charactermanager.jooq.tables;


import ai.ragu.charactermanager.jooq.Keys;
import ai.ragu.charactermanager.jooq.Public;
import ai.ragu.charactermanager.jooq.tables.records.WeaponRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row15;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Weapon extends TableImpl<WeaponRecord> {

    private static final long serialVersionUID = -601470305;

    /**
     * The reference instance of <code>public.weapon</code>
     */
    public static final Weapon WEAPON = new Weapon();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WeaponRecord> getRecordType() {
        return WeaponRecord.class;
    }

    /**
     * The column <code>public.weapon.id</code>.
     */
    public final TableField<WeaponRecord, String> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>public.weapon.name</code>.
     */
    public final TableField<WeaponRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.weapon.level</code>.
     */
    public final TableField<WeaponRecord, String> LEVEL = createField(DSL.name("level"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.weapon.price</code>.
     */
    public final TableField<WeaponRecord, Integer> PRICE = createField(DSL.name("price"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.weapon.weapon_proficiency</code>.
     */
    public final TableField<WeaponRecord, Integer> WEAPON_PROFICIENCY = createField(DSL.name("weapon_proficiency"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.weapon.ranged</code>.
     */
    public final TableField<WeaponRecord, String> RANGED = createField(DSL.name("ranged"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.weapon.damage</code>.
     */
    public final TableField<WeaponRecord, Integer> DAMAGE = createField(DSL.name("damage"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.weapon.damage_type</code>.
     */
    public final TableField<WeaponRecord, String> DAMAGE_TYPE = createField(DSL.name("damage_type"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.weapon.range</code>.
     */
    public final TableField<WeaponRecord, String> RANGE = createField(DSL.name("range"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.weapon.reload</code>.
     */
    public final TableField<WeaponRecord, String> RELOAD = createField(DSL.name("reload"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.weapon.bulk</code>.
     */
    public final TableField<WeaponRecord, String> BULK = createField(DSL.name("bulk"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.weapon.hands</code>.
     */
    public final TableField<WeaponRecord, String> HANDS = createField(DSL.name("hands"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.weapon.group</code>.
     */
    public final TableField<WeaponRecord, String> GROUP = createField(DSL.name("group"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.weapon.src</code>.
     */
    public final TableField<WeaponRecord, String> SRC = createField(DSL.name("src"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.weapon.url</code>.
     */
    public final TableField<WeaponRecord, String> URL = createField(DSL.name("url"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * Create a <code>public.weapon</code> table reference
     */
    public Weapon() {
        this(DSL.name("weapon"), null);
    }

    /**
     * Create an aliased <code>public.weapon</code> table reference
     */
    public Weapon(String alias) {
        this(DSL.name(alias), WEAPON);
    }

    /**
     * Create an aliased <code>public.weapon</code> table reference
     */
    public Weapon(Name alias) {
        this(alias, WEAPON);
    }

    private Weapon(Name alias, Table<WeaponRecord> aliased) {
        this(alias, aliased, null);
    }

    private Weapon(Name alias, Table<WeaponRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> Weapon(Table<O> child, ForeignKey<O, WeaponRecord> key) {
        super(child, key, WEAPON);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public UniqueKey<WeaponRecord> getPrimaryKey() {
        return Keys.WEAPON_PKEY;
    }

    @Override
    public List<UniqueKey<WeaponRecord>> getKeys() {
        return Arrays.<UniqueKey<WeaponRecord>>asList(Keys.WEAPON_PKEY);
    }

    @Override
    public List<ForeignKey<WeaponRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<WeaponRecord, ?>>asList(Keys.WEAPON__WEAPON_SRC_FKEY);
    }

    public RulesSource rulesSource() {
        return new RulesSource(this, Keys.WEAPON__WEAPON_SRC_FKEY);
    }

    @Override
    public Weapon as(String alias) {
        return new Weapon(DSL.name(alias), this);
    }

    @Override
    public Weapon as(Name alias) {
        return new Weapon(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Weapon rename(String name) {
        return new Weapon(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Weapon rename(Name name) {
        return new Weapon(name, null);
    }

    // -------------------------------------------------------------------------
    // Row15 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row15<String, String, String, Integer, Integer, String, Integer, String, String, String, String, String, String, String, String> fieldsRow() {
        return (Row15) super.fieldsRow();
    }
}
