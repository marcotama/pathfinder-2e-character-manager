/*
 * This file is generated by jOOQ.
 */
package ai.ragu.charactermanager.jooq.tables.records;


import ai.ragu.charactermanager.jooq.tables.Special;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SpecialRecord extends UpdatableRecordImpl<SpecialRecord> implements Record9<String, String, String, String, Short, String, String, String, String> {

    private static final long serialVersionUID = 1495462631;

    /**
     * Setter for <code>public.special.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.special.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.special.category</code>.
     */
    public void setCategory(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.special.category</code>.
     */
    public String getCategory() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.special.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.special.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.special.description</code>.
     */
    public void setDescription(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.special.description</code>.
     */
    public String getDescription() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.special.level</code>.
     */
    public void setLevel(Short value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.special.level</code>.
     */
    public Short getLevel() {
        return (Short) get(4);
    }

    /**
     * Setter for <code>public.special.actions</code>.
     */
    public void setActions(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.special.actions</code>.
     */
    public String getActions() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.special.requirements</code>.
     */
    public void setRequirements(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.special.requirements</code>.
     */
    public String getRequirements() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.special.src</code>.
     */
    public void setSrc(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.special.src</code>.
     */
    public String getSrc() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.special.url</code>.
     */
    public void setUrl(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.special.url</code>.
     */
    public String getUrl() {
        return (String) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<String, String, String, String, Short, String, String, String, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<String, String, String, String, Short, String, String, String, String> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Special.SPECIAL.ID;
    }

    @Override
    public Field<String> field2() {
        return Special.SPECIAL.CATEGORY;
    }

    @Override
    public Field<String> field3() {
        return Special.SPECIAL.NAME;
    }

    @Override
    public Field<String> field4() {
        return Special.SPECIAL.DESCRIPTION;
    }

    @Override
    public Field<Short> field5() {
        return Special.SPECIAL.LEVEL;
    }

    @Override
    public Field<String> field6() {
        return Special.SPECIAL.ACTIONS;
    }

    @Override
    public Field<String> field7() {
        return Special.SPECIAL.REQUIREMENTS;
    }

    @Override
    public Field<String> field8() {
        return Special.SPECIAL.SRC;
    }

    @Override
    public Field<String> field9() {
        return Special.SPECIAL.URL;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getCategory();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public String component4() {
        return getDescription();
    }

    @Override
    public Short component5() {
        return getLevel();
    }

    @Override
    public String component6() {
        return getActions();
    }

    @Override
    public String component7() {
        return getRequirements();
    }

    @Override
    public String component8() {
        return getSrc();
    }

    @Override
    public String component9() {
        return getUrl();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getCategory();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public String value4() {
        return getDescription();
    }

    @Override
    public Short value5() {
        return getLevel();
    }

    @Override
    public String value6() {
        return getActions();
    }

    @Override
    public String value7() {
        return getRequirements();
    }

    @Override
    public String value8() {
        return getSrc();
    }

    @Override
    public String value9() {
        return getUrl();
    }

    @Override
    public SpecialRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public SpecialRecord value2(String value) {
        setCategory(value);
        return this;
    }

    @Override
    public SpecialRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public SpecialRecord value4(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public SpecialRecord value5(Short value) {
        setLevel(value);
        return this;
    }

    @Override
    public SpecialRecord value6(String value) {
        setActions(value);
        return this;
    }

    @Override
    public SpecialRecord value7(String value) {
        setRequirements(value);
        return this;
    }

    @Override
    public SpecialRecord value8(String value) {
        setSrc(value);
        return this;
    }

    @Override
    public SpecialRecord value9(String value) {
        setUrl(value);
        return this;
    }

    @Override
    public SpecialRecord values(String value1, String value2, String value3, String value4, Short value5, String value6, String value7, String value8, String value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SpecialRecord
     */
    public SpecialRecord() {
        super(Special.SPECIAL);
    }

    /**
     * Create a detached, initialised SpecialRecord
     */
    public SpecialRecord(String id, String category, String name, String description, Short level, String actions, String requirements, String src, String url) {
        super(Special.SPECIAL);

        set(0, id);
        set(1, category);
        set(2, name);
        set(3, description);
        set(4, level);
        set(5, actions);
        set(6, requirements);
        set(7, src);
        set(8, url);
    }
}
