/*
 * This file is generated by jOOQ.
 */
package ai.ragu.charactermanager.jooq.tables;


import ai.ragu.charactermanager.jooq.Keys;
import ai.ragu.charactermanager.jooq.Public;
import ai.ragu.charactermanager.jooq.tables.records.CompanionItemSkillBonusRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CompanionItemSkillBonus extends TableImpl<CompanionItemSkillBonusRecord> {

    private static final long serialVersionUID = 1292118513;

    /**
     * The reference instance of <code>public.companion_item_skill_bonus</code>
     */
    public static final CompanionItemSkillBonus COMPANION_ITEM_SKILL_BONUS = new CompanionItemSkillBonus();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CompanionItemSkillBonusRecord> getRecordType() {
        return CompanionItemSkillBonusRecord.class;
    }

    /**
     * The column <code>public.companion_item_skill_bonus.companion_item_id</code>.
     */
    public final TableField<CompanionItemSkillBonusRecord, String> COMPANION_ITEM_ID = createField(DSL.name("companion_item_id"), org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>public.companion_item_skill_bonus.skill_id</code>.
     */
    public final TableField<CompanionItemSkillBonusRecord, String> SKILL_ID = createField(DSL.name("skill_id"), org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>public.companion_item_skill_bonus.bonus</code>.
     */
    public final TableField<CompanionItemSkillBonusRecord, Short> BONUS = createField(DSL.name("bonus"), org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * Create a <code>public.companion_item_skill_bonus</code> table reference
     */
    public CompanionItemSkillBonus() {
        this(DSL.name("companion_item_skill_bonus"), null);
    }

    /**
     * Create an aliased <code>public.companion_item_skill_bonus</code> table reference
     */
    public CompanionItemSkillBonus(String alias) {
        this(DSL.name(alias), COMPANION_ITEM_SKILL_BONUS);
    }

    /**
     * Create an aliased <code>public.companion_item_skill_bonus</code> table reference
     */
    public CompanionItemSkillBonus(Name alias) {
        this(alias, COMPANION_ITEM_SKILL_BONUS);
    }

    private CompanionItemSkillBonus(Name alias, Table<CompanionItemSkillBonusRecord> aliased) {
        this(alias, aliased, null);
    }

    private CompanionItemSkillBonus(Name alias, Table<CompanionItemSkillBonusRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> CompanionItemSkillBonus(Table<O> child, ForeignKey<O, CompanionItemSkillBonusRecord> key) {
        super(child, key, COMPANION_ITEM_SKILL_BONUS);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public UniqueKey<CompanionItemSkillBonusRecord> getPrimaryKey() {
        return Keys.COMPANION_ITEM_SKILL_BONUS_PKEY;
    }

    @Override
    public List<UniqueKey<CompanionItemSkillBonusRecord>> getKeys() {
        return Arrays.<UniqueKey<CompanionItemSkillBonusRecord>>asList(Keys.COMPANION_ITEM_SKILL_BONUS_PKEY);
    }

    @Override
    public List<ForeignKey<CompanionItemSkillBonusRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CompanionItemSkillBonusRecord, ?>>asList(Keys.COMPANION_ITEM_SKILL_BONUS__COMPANION_ITEM_SKILL_BONUS_COMPANION_ITEM_ID_FKEY, Keys.COMPANION_ITEM_SKILL_BONUS__COMPANION_ITEM_SKILL_BONUS_SKILL_ID_FKEY);
    }

    public CompanionItem companionItem() {
        return new CompanionItem(this, Keys.COMPANION_ITEM_SKILL_BONUS__COMPANION_ITEM_SKILL_BONUS_COMPANION_ITEM_ID_FKEY);
    }

    public Skill skill() {
        return new Skill(this, Keys.COMPANION_ITEM_SKILL_BONUS__COMPANION_ITEM_SKILL_BONUS_SKILL_ID_FKEY);
    }

    @Override
    public CompanionItemSkillBonus as(String alias) {
        return new CompanionItemSkillBonus(DSL.name(alias), this);
    }

    @Override
    public CompanionItemSkillBonus as(Name alias) {
        return new CompanionItemSkillBonus(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CompanionItemSkillBonus rename(String name) {
        return new CompanionItemSkillBonus(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CompanionItemSkillBonus rename(Name name) {
        return new CompanionItemSkillBonus(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, Short> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
