/*
 * This file is generated by jOOQ.
 */
package ai.ragu.charactermanager.jooq.tables.records;


import ai.ragu.charactermanager.jooq.tables.TrainingLevel;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TrainingLevelRecord extends UpdatableRecordImpl<TrainingLevelRecord> implements Record4<String, String, Boolean, Short> {

    private static final long serialVersionUID = -1202550349;

    /**
     * Setter for <code>public.training_level.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.training_level.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.training_level.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.training_level.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.training_level.level_bonus</code>.
     */
    public void setLevelBonus(Boolean value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.training_level.level_bonus</code>.
     */
    public Boolean getLevelBonus() {
        return (Boolean) get(2);
    }

    /**
     * Setter for <code>public.training_level.flat_bonus</code>.
     */
    public void setFlatBonus(Short value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.training_level.flat_bonus</code>.
     */
    public Short getFlatBonus() {
        return (Short) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, Boolean, Short> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, String, Boolean, Short> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return TrainingLevel.TRAINING_LEVEL.ID;
    }

    @Override
    public Field<String> field2() {
        return TrainingLevel.TRAINING_LEVEL.NAME;
    }

    @Override
    public Field<Boolean> field3() {
        return TrainingLevel.TRAINING_LEVEL.LEVEL_BONUS;
    }

    @Override
    public Field<Short> field4() {
        return TrainingLevel.TRAINING_LEVEL.FLAT_BONUS;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Boolean component3() {
        return getLevelBonus();
    }

    @Override
    public Short component4() {
        return getFlatBonus();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Boolean value3() {
        return getLevelBonus();
    }

    @Override
    public Short value4() {
        return getFlatBonus();
    }

    @Override
    public TrainingLevelRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public TrainingLevelRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public TrainingLevelRecord value3(Boolean value) {
        setLevelBonus(value);
        return this;
    }

    @Override
    public TrainingLevelRecord value4(Short value) {
        setFlatBonus(value);
        return this;
    }

    @Override
    public TrainingLevelRecord values(String value1, String value2, Boolean value3, Short value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TrainingLevelRecord
     */
    public TrainingLevelRecord() {
        super(TrainingLevel.TRAINING_LEVEL);
    }

    /**
     * Create a detached, initialised TrainingLevelRecord
     */
    public TrainingLevelRecord(String id, String name, Boolean levelBonus, Short flatBonus) {
        super(TrainingLevel.TRAINING_LEVEL);

        set(0, id);
        set(1, name);
        set(2, levelBonus);
        set(3, flatBonus);
    }
}
