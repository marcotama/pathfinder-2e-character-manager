/*
 * This file is generated by jOOQ.
 */
package ai.ragu.charactermanager.jooq.tables.records;


import ai.ragu.charactermanager.jooq.tables.FeatSkillRequirement;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FeatSkillRequirementRecord extends UpdatableRecordImpl<FeatSkillRequirementRecord> implements Record3<String, String, String> {

    private static final long serialVersionUID = 901834508;

    /**
     * Setter for <code>public.feat_skill_requirement.feat_id</code>.
     */
    public void setFeatId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.feat_skill_requirement.feat_id</code>.
     */
    public String getFeatId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.feat_skill_requirement.skill_id</code>.
     */
    public void setSkillId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.feat_skill_requirement.skill_id</code>.
     */
    public String getSkillId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.feat_skill_requirement.training_level_id</code>.
     */
    public void setTrainingLevelId(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.feat_skill_requirement.training_level_id</code>.
     */
    public String getTrainingLevelId() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return FeatSkillRequirement.FEAT_SKILL_REQUIREMENT.FEAT_ID;
    }

    @Override
    public Field<String> field2() {
        return FeatSkillRequirement.FEAT_SKILL_REQUIREMENT.SKILL_ID;
    }

    @Override
    public Field<String> field3() {
        return FeatSkillRequirement.FEAT_SKILL_REQUIREMENT.TRAINING_LEVEL_ID;
    }

    @Override
    public String component1() {
        return getFeatId();
    }

    @Override
    public String component2() {
        return getSkillId();
    }

    @Override
    public String component3() {
        return getTrainingLevelId();
    }

    @Override
    public String value1() {
        return getFeatId();
    }

    @Override
    public String value2() {
        return getSkillId();
    }

    @Override
    public String value3() {
        return getTrainingLevelId();
    }

    @Override
    public FeatSkillRequirementRecord value1(String value) {
        setFeatId(value);
        return this;
    }

    @Override
    public FeatSkillRequirementRecord value2(String value) {
        setSkillId(value);
        return this;
    }

    @Override
    public FeatSkillRequirementRecord value3(String value) {
        setTrainingLevelId(value);
        return this;
    }

    @Override
    public FeatSkillRequirementRecord values(String value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FeatSkillRequirementRecord
     */
    public FeatSkillRequirementRecord() {
        super(FeatSkillRequirement.FEAT_SKILL_REQUIREMENT);
    }

    /**
     * Create a detached, initialised FeatSkillRequirementRecord
     */
    public FeatSkillRequirementRecord(String featId, String skillId, String trainingLevelId) {
        super(FeatSkillRequirement.FEAT_SKILL_REQUIREMENT);

        set(0, featId);
        set(1, skillId);
        set(2, trainingLevelId);
    }
}
