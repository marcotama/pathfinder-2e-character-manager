/*
 * This file is generated by jOOQ.
 */
package ai.ragu.charactermanager.jooq.tables;


import ai.ragu.charactermanager.jooq.Keys;
import ai.ragu.charactermanager.jooq.Public;
import ai.ragu.charactermanager.jooq.tables.records.AncestryAbilityBoostsRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AncestryAbilityBoosts extends TableImpl<AncestryAbilityBoostsRecord> {

    private static final long serialVersionUID = -1513850080;

    /**
     * The reference instance of <code>public.ancestry_ability_boosts</code>
     */
    public static final AncestryAbilityBoosts ANCESTRY_ABILITY_BOOSTS = new AncestryAbilityBoosts();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AncestryAbilityBoostsRecord> getRecordType() {
        return AncestryAbilityBoostsRecord.class;
    }

    /**
     * The column <code>public.ancestry_ability_boosts.ancestry_id</code>.
     */
    public final TableField<AncestryAbilityBoostsRecord, String> ANCESTRY_ID = createField(DSL.name("ancestry_id"), org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>public.ancestry_ability_boosts.ability_score_id</code>.
     */
    public final TableField<AncestryAbilityBoostsRecord, String> ABILITY_SCORE_ID = createField(DSL.name("ability_score_id"), org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * Create a <code>public.ancestry_ability_boosts</code> table reference
     */
    public AncestryAbilityBoosts() {
        this(DSL.name("ancestry_ability_boosts"), null);
    }

    /**
     * Create an aliased <code>public.ancestry_ability_boosts</code> table reference
     */
    public AncestryAbilityBoosts(String alias) {
        this(DSL.name(alias), ANCESTRY_ABILITY_BOOSTS);
    }

    /**
     * Create an aliased <code>public.ancestry_ability_boosts</code> table reference
     */
    public AncestryAbilityBoosts(Name alias) {
        this(alias, ANCESTRY_ABILITY_BOOSTS);
    }

    private AncestryAbilityBoosts(Name alias, Table<AncestryAbilityBoostsRecord> aliased) {
        this(alias, aliased, null);
    }

    private AncestryAbilityBoosts(Name alias, Table<AncestryAbilityBoostsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> AncestryAbilityBoosts(Table<O> child, ForeignKey<O, AncestryAbilityBoostsRecord> key) {
        super(child, key, ANCESTRY_ABILITY_BOOSTS);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public UniqueKey<AncestryAbilityBoostsRecord> getPrimaryKey() {
        return Keys.ANCESTRY_ABILITY_BOOSTS_PKEY;
    }

    @Override
    public List<UniqueKey<AncestryAbilityBoostsRecord>> getKeys() {
        return Arrays.<UniqueKey<AncestryAbilityBoostsRecord>>asList(Keys.ANCESTRY_ABILITY_BOOSTS_PKEY);
    }

    @Override
    public List<ForeignKey<AncestryAbilityBoostsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AncestryAbilityBoostsRecord, ?>>asList(Keys.ANCESTRY_ABILITY_BOOSTS__ANCESTRY_ABILITY_BOOSTS_ANCESTRY_ID_FKEY, Keys.ANCESTRY_ABILITY_BOOSTS__ANCESTRY_ABILITY_BOOSTS_ABILITY_SCORE_ID_FKEY);
    }

    public Ancestry ancestry() {
        return new Ancestry(this, Keys.ANCESTRY_ABILITY_BOOSTS__ANCESTRY_ABILITY_BOOSTS_ANCESTRY_ID_FKEY);
    }

    public AbilityScore abilityScore() {
        return new AbilityScore(this, Keys.ANCESTRY_ABILITY_BOOSTS__ANCESTRY_ABILITY_BOOSTS_ABILITY_SCORE_ID_FKEY);
    }

    @Override
    public AncestryAbilityBoosts as(String alias) {
        return new AncestryAbilityBoosts(DSL.name(alias), this);
    }

    @Override
    public AncestryAbilityBoosts as(Name alias) {
        return new AncestryAbilityBoosts(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AncestryAbilityBoosts rename(String name) {
        return new AncestryAbilityBoosts(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AncestryAbilityBoosts rename(Name name) {
        return new AncestryAbilityBoosts(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
