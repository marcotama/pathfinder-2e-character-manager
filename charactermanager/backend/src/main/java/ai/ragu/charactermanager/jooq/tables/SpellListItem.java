/*
 * This file is generated by jOOQ.
 */
package ai.ragu.charactermanager.jooq.tables;


import ai.ragu.charactermanager.jooq.Keys;
import ai.ragu.charactermanager.jooq.Public;
import ai.ragu.charactermanager.jooq.tables.records.SpellListItemRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SpellListItem extends TableImpl<SpellListItemRecord> {

    private static final long serialVersionUID = -1720573963;

    /**
     * The reference instance of <code>public.spell_list_item</code>
     */
    public static final SpellListItem SPELL_LIST_ITEM = new SpellListItem();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SpellListItemRecord> getRecordType() {
        return SpellListItemRecord.class;
    }

    /**
     * The column <code>public.spell_list_item.spell_list_id</code>.
     */
    public final TableField<SpellListItemRecord, String> SPELL_LIST_ID = createField(DSL.name("spell_list_id"), org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>public.spell_list_item.spell_id</code>.
     */
    public final TableField<SpellListItemRecord, String> SPELL_ID = createField(DSL.name("spell_id"), org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>public.spell_list_item.level</code>.
     */
    public final TableField<SpellListItemRecord, Short> LEVEL = createField(DSL.name("level"), org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * Create a <code>public.spell_list_item</code> table reference
     */
    public SpellListItem() {
        this(DSL.name("spell_list_item"), null);
    }

    /**
     * Create an aliased <code>public.spell_list_item</code> table reference
     */
    public SpellListItem(String alias) {
        this(DSL.name(alias), SPELL_LIST_ITEM);
    }

    /**
     * Create an aliased <code>public.spell_list_item</code> table reference
     */
    public SpellListItem(Name alias) {
        this(alias, SPELL_LIST_ITEM);
    }

    private SpellListItem(Name alias, Table<SpellListItemRecord> aliased) {
        this(alias, aliased, null);
    }

    private SpellListItem(Name alias, Table<SpellListItemRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> SpellListItem(Table<O> child, ForeignKey<O, SpellListItemRecord> key) {
        super(child, key, SPELL_LIST_ITEM);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public UniqueKey<SpellListItemRecord> getPrimaryKey() {
        return Keys.SPELL_LIST_ITEM_PKEY;
    }

    @Override
    public List<UniqueKey<SpellListItemRecord>> getKeys() {
        return Arrays.<UniqueKey<SpellListItemRecord>>asList(Keys.SPELL_LIST_ITEM_PKEY);
    }

    @Override
    public List<ForeignKey<SpellListItemRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<SpellListItemRecord, ?>>asList(Keys.SPELL_LIST_ITEM__SPELL_LIST_ITEM_SPELL_LIST_ID_FKEY, Keys.SPELL_LIST_ITEM__SPELL_LIST_ITEM_SPELL_ID_FKEY);
    }

    public SpellList spellList() {
        return new SpellList(this, Keys.SPELL_LIST_ITEM__SPELL_LIST_ITEM_SPELL_LIST_ID_FKEY);
    }

    public Spell spell() {
        return new Spell(this, Keys.SPELL_LIST_ITEM__SPELL_LIST_ITEM_SPELL_ID_FKEY);
    }

    @Override
    public SpellListItem as(String alias) {
        return new SpellListItem(DSL.name(alias), this);
    }

    @Override
    public SpellListItem as(Name alias) {
        return new SpellListItem(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SpellListItem rename(String name) {
        return new SpellListItem(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SpellListItem rename(Name name) {
        return new SpellListItem(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, Short> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
