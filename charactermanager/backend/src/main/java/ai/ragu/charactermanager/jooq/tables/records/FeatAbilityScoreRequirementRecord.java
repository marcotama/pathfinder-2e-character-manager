/*
 * This file is generated by jOOQ.
 */
package ai.ragu.charactermanager.jooq.tables.records;


import ai.ragu.charactermanager.jooq.tables.FeatAbilityScoreRequirement;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FeatAbilityScoreRequirementRecord extends UpdatableRecordImpl<FeatAbilityScoreRequirementRecord> implements Record3<String, String, Short> {

    private static final long serialVersionUID = 1213697439;

    /**
     * Setter for <code>public.feat_ability_score_requirement.feat_id</code>.
     */
    public void setFeatId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.feat_ability_score_requirement.feat_id</code>.
     */
    public String getFeatId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.feat_ability_score_requirement.ability_score_id</code>.
     */
    public void setAbilityScoreId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.feat_ability_score_requirement.ability_score_id</code>.
     */
    public String getAbilityScoreId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.feat_ability_score_requirement.training_level_id</code>.
     */
    public void setTrainingLevelId(Short value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.feat_ability_score_requirement.training_level_id</code>.
     */
    public Short getTrainingLevelId() {
        return (Short) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, Short> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, Short> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return FeatAbilityScoreRequirement.FEAT_ABILITY_SCORE_REQUIREMENT.FEAT_ID;
    }

    @Override
    public Field<String> field2() {
        return FeatAbilityScoreRequirement.FEAT_ABILITY_SCORE_REQUIREMENT.ABILITY_SCORE_ID;
    }

    @Override
    public Field<Short> field3() {
        return FeatAbilityScoreRequirement.FEAT_ABILITY_SCORE_REQUIREMENT.TRAINING_LEVEL_ID;
    }

    @Override
    public String component1() {
        return getFeatId();
    }

    @Override
    public String component2() {
        return getAbilityScoreId();
    }

    @Override
    public Short component3() {
        return getTrainingLevelId();
    }

    @Override
    public String value1() {
        return getFeatId();
    }

    @Override
    public String value2() {
        return getAbilityScoreId();
    }

    @Override
    public Short value3() {
        return getTrainingLevelId();
    }

    @Override
    public FeatAbilityScoreRequirementRecord value1(String value) {
        setFeatId(value);
        return this;
    }

    @Override
    public FeatAbilityScoreRequirementRecord value2(String value) {
        setAbilityScoreId(value);
        return this;
    }

    @Override
    public FeatAbilityScoreRequirementRecord value3(Short value) {
        setTrainingLevelId(value);
        return this;
    }

    @Override
    public FeatAbilityScoreRequirementRecord values(String value1, String value2, Short value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FeatAbilityScoreRequirementRecord
     */
    public FeatAbilityScoreRequirementRecord() {
        super(FeatAbilityScoreRequirement.FEAT_ABILITY_SCORE_REQUIREMENT);
    }

    /**
     * Create a detached, initialised FeatAbilityScoreRequirementRecord
     */
    public FeatAbilityScoreRequirementRecord(String featId, String abilityScoreId, Short trainingLevelId) {
        super(FeatAbilityScoreRequirement.FEAT_ABILITY_SCORE_REQUIREMENT);

        set(0, featId);
        set(1, abilityScoreId);
        set(2, trainingLevelId);
    }
}
