/*
 * This file is generated by jOOQ.
 */
package ai.ragu.charactermanager.jooq.tables.records;


import ai.ragu.charactermanager.jooq.tables.MagicArmorTrait;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MagicArmorTraitRecord extends UpdatableRecordImpl<MagicArmorTraitRecord> implements Record2<String, String> {

    private static final long serialVersionUID = 559813865;

    /**
     * Setter for <code>public.magic_armor_trait.magic_armor_id</code>.
     */
    public void setMagicArmorId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.magic_armor_trait.magic_armor_id</code>.
     */
    public String getMagicArmorId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.magic_armor_trait.trait</code>.
     */
    public void setTrait(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.magic_armor_trait.trait</code>.
     */
    public String getTrait() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return MagicArmorTrait.MAGIC_ARMOR_TRAIT.MAGIC_ARMOR_ID;
    }

    @Override
    public Field<String> field2() {
        return MagicArmorTrait.MAGIC_ARMOR_TRAIT.TRAIT;
    }

    @Override
    public String component1() {
        return getMagicArmorId();
    }

    @Override
    public String component2() {
        return getTrait();
    }

    @Override
    public String value1() {
        return getMagicArmorId();
    }

    @Override
    public String value2() {
        return getTrait();
    }

    @Override
    public MagicArmorTraitRecord value1(String value) {
        setMagicArmorId(value);
        return this;
    }

    @Override
    public MagicArmorTraitRecord value2(String value) {
        setTrait(value);
        return this;
    }

    @Override
    public MagicArmorTraitRecord values(String value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MagicArmorTraitRecord
     */
    public MagicArmorTraitRecord() {
        super(MagicArmorTrait.MAGIC_ARMOR_TRAIT);
    }

    /**
     * Create a detached, initialised MagicArmorTraitRecord
     */
    public MagicArmorTraitRecord(String magicArmorId, String trait) {
        super(MagicArmorTrait.MAGIC_ARMOR_TRAIT);

        set(0, magicArmorId);
        set(1, trait);
    }
}
