/*
 * This file is generated by jOOQ.
 */
package ai.ragu.charactermanager.jooq.tables.records;


import ai.ragu.charactermanager.jooq.tables.CompanionItemSkillBonus;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CompanionItemSkillBonusRecord extends UpdatableRecordImpl<CompanionItemSkillBonusRecord> implements Record3<String, String, Short> {

    private static final long serialVersionUID = 197521081;

    /**
     * Setter for <code>public.companion_item_skill_bonus.companion_item_id</code>.
     */
    public void setCompanionItemId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.companion_item_skill_bonus.companion_item_id</code>.
     */
    public String getCompanionItemId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.companion_item_skill_bonus.skill_id</code>.
     */
    public void setSkillId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.companion_item_skill_bonus.skill_id</code>.
     */
    public String getSkillId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.companion_item_skill_bonus.bonus</code>.
     */
    public void setBonus(Short value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.companion_item_skill_bonus.bonus</code>.
     */
    public Short getBonus() {
        return (Short) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, Short> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, Short> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return CompanionItemSkillBonus.COMPANION_ITEM_SKILL_BONUS.COMPANION_ITEM_ID;
    }

    @Override
    public Field<String> field2() {
        return CompanionItemSkillBonus.COMPANION_ITEM_SKILL_BONUS.SKILL_ID;
    }

    @Override
    public Field<Short> field3() {
        return CompanionItemSkillBonus.COMPANION_ITEM_SKILL_BONUS.BONUS;
    }

    @Override
    public String component1() {
        return getCompanionItemId();
    }

    @Override
    public String component2() {
        return getSkillId();
    }

    @Override
    public Short component3() {
        return getBonus();
    }

    @Override
    public String value1() {
        return getCompanionItemId();
    }

    @Override
    public String value2() {
        return getSkillId();
    }

    @Override
    public Short value3() {
        return getBonus();
    }

    @Override
    public CompanionItemSkillBonusRecord value1(String value) {
        setCompanionItemId(value);
        return this;
    }

    @Override
    public CompanionItemSkillBonusRecord value2(String value) {
        setSkillId(value);
        return this;
    }

    @Override
    public CompanionItemSkillBonusRecord value3(Short value) {
        setBonus(value);
        return this;
    }

    @Override
    public CompanionItemSkillBonusRecord values(String value1, String value2, Short value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CompanionItemSkillBonusRecord
     */
    public CompanionItemSkillBonusRecord() {
        super(CompanionItemSkillBonus.COMPANION_ITEM_SKILL_BONUS);
    }

    /**
     * Create a detached, initialised CompanionItemSkillBonusRecord
     */
    public CompanionItemSkillBonusRecord(String companionItemId, String skillId, Short bonus) {
        super(CompanionItemSkillBonus.COMPANION_ITEM_SKILL_BONUS);

        set(0, companionItemId);
        set(1, skillId);
        set(2, bonus);
    }
}
