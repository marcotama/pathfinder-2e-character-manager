/*
 * This file is generated by jOOQ.
 */
package ai.ragu.charactermanager.jooq.tables;


import ai.ragu.charactermanager.jooq.Keys;
import ai.ragu.charactermanager.jooq.Public;
import ai.ragu.charactermanager.jooq.tables.records.HellknightOrderRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row14;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HellknightOrder extends TableImpl<HellknightOrderRecord> {

    private static final long serialVersionUID = 871812192;

    /**
     * The reference instance of <code>public.hellknight_order</code>
     */
    public static final HellknightOrder HELLKNIGHT_ORDER = new HellknightOrder();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HellknightOrderRecord> getRecordType() {
        return HellknightOrderRecord.class;
    }

    /**
     * The column <code>public.hellknight_order.id</code>.
     */
    public final TableField<HellknightOrderRecord, String> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>public.hellknight_order.name</code>.
     */
    public final TableField<HellknightOrderRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.hellknight_order.lesser_name</code>.
     */
    public final TableField<HellknightOrderRecord, String> LESSER_NAME = createField(DSL.name("lesser_name"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.hellknight_order.lesser_action</code>.
     */
    public final TableField<HellknightOrderRecord, String> LESSER_ACTION = createField(DSL.name("lesser_action"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.hellknight_order.lesser_traits</code>.
     */
    public final TableField<HellknightOrderRecord, String> LESSER_TRAITS = createField(DSL.name("lesser_traits"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.hellknight_order.lesser_description</code>.
     */
    public final TableField<HellknightOrderRecord, String> LESSER_DESCRIPTION = createField(DSL.name("lesser_description"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.hellknight_order.greater_name</code>.
     */
    public final TableField<HellknightOrderRecord, String> GREATER_NAME = createField(DSL.name("greater_name"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.hellknight_order.greater_action</code>.
     */
    public final TableField<HellknightOrderRecord, String> GREATER_ACTION = createField(DSL.name("greater_action"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.hellknight_order.greater_traits</code>.
     */
    public final TableField<HellknightOrderRecord, String> GREATER_TRAITS = createField(DSL.name("greater_traits"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.hellknight_order.greater_description</code>.
     */
    public final TableField<HellknightOrderRecord, String> GREATER_DESCRIPTION = createField(DSL.name("greater_description"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.hellknight_order.description</code>.
     */
    public final TableField<HellknightOrderRecord, String> DESCRIPTION = createField(DSL.name("description"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.hellknight_order.weapon</code>.
     */
    public final TableField<HellknightOrderRecord, String> WEAPON = createField(DSL.name("weapon"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.hellknight_order.src</code>.
     */
    public final TableField<HellknightOrderRecord, String> SRC = createField(DSL.name("src"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.hellknight_order.url</code>.
     */
    public final TableField<HellknightOrderRecord, String> URL = createField(DSL.name("url"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * Create a <code>public.hellknight_order</code> table reference
     */
    public HellknightOrder() {
        this(DSL.name("hellknight_order"), null);
    }

    /**
     * Create an aliased <code>public.hellknight_order</code> table reference
     */
    public HellknightOrder(String alias) {
        this(DSL.name(alias), HELLKNIGHT_ORDER);
    }

    /**
     * Create an aliased <code>public.hellknight_order</code> table reference
     */
    public HellknightOrder(Name alias) {
        this(alias, HELLKNIGHT_ORDER);
    }

    private HellknightOrder(Name alias, Table<HellknightOrderRecord> aliased) {
        this(alias, aliased, null);
    }

    private HellknightOrder(Name alias, Table<HellknightOrderRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> HellknightOrder(Table<O> child, ForeignKey<O, HellknightOrderRecord> key) {
        super(child, key, HELLKNIGHT_ORDER);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public UniqueKey<HellknightOrderRecord> getPrimaryKey() {
        return Keys.HELLKNIGHT_ORDER_PKEY;
    }

    @Override
    public List<UniqueKey<HellknightOrderRecord>> getKeys() {
        return Arrays.<UniqueKey<HellknightOrderRecord>>asList(Keys.HELLKNIGHT_ORDER_PKEY);
    }

    @Override
    public List<ForeignKey<HellknightOrderRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<HellknightOrderRecord, ?>>asList(Keys.HELLKNIGHT_ORDER__HELLKNIGHT_ORDER_SRC_FKEY);
    }

    public RulesSource rulesSource() {
        return new RulesSource(this, Keys.HELLKNIGHT_ORDER__HELLKNIGHT_ORDER_SRC_FKEY);
    }

    @Override
    public HellknightOrder as(String alias) {
        return new HellknightOrder(DSL.name(alias), this);
    }

    @Override
    public HellknightOrder as(Name alias) {
        return new HellknightOrder(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public HellknightOrder rename(String name) {
        return new HellknightOrder(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public HellknightOrder rename(Name name) {
        return new HellknightOrder(name, null);
    }

    // -------------------------------------------------------------------------
    // Row14 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row14<String, String, String, String, String, String, String, String, String, String, String, String, String, String> fieldsRow() {
        return (Row14) super.fieldsRow();
    }
}
